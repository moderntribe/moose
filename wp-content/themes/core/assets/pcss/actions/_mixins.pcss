/* -------------------------------------------------------------------------
 *
 * Mixins: Actions
 *
 * ------------------------------------------------------------------------- */

/* -------------------------------------------------------------------------
 * Primary Button
 * ------------------------------------------------------------------------- */

@define-mixin a-btn {

	@mixin a-btn-arrow;
	display: inline-block;
	width: auto;
	height: auto;
	position: relative;
	background-color: var(--color-btn-background-color);
	border: 1px solid transparent;
	border-radius: var(--border-radius-full);
	cursor: pointer;
	color: var(--color-btn-color);
	font-family: var(--font-family-sans-serif);
	font-size: var(--font-size-20);
	font-weight: var(--font-weight-bold);
	line-height: 1;
	text-decoration: none;
	text-align: left;
	transition: var(--transition);

	/**
	 * Extra right padding to accommodate the absolutely positioned arrow
	 * 8px = space between text and arrow
	 * 14px = width of arrow
	 * var(--spacer-30) = right padding
	 */
	padding: var(--spacer-20) calc(8px + 14px + var(--spacer-30)) var(--spacer-20) var(--spacer-30);

	&:focus:not(:focus-visible) {

		@mixin a-btn-hover-focus;
	}

	&:focus-visible {

		@mixin focus-visible;
		@mixin a-btn-hover-focus;
	}

	@media (--has-hover) {

		&:hover {

			@mixin a-btn-hover-focus;
		}
	}
}

/* -------------------------------------------------------------------------
 * Primary Button - Button Arrow
 *
 * Uses ::before & ::after to create the chevron to arrow transition
 * on hover/focus. The chevron is visible by default, and the arrow
 * fades in on hover/focus while the chevron fades out and shifts right
 * at the same speed.
 * ------------------------------------------------------------------------- */

@define-mixin a-btn-arrow {

	&::before,
	&::after {
		content: '';
		display: block;
		width: 14px;
		height: 16px;
		position: absolute;
		top: 50%;
		right: var(--spacer-30);
		transform: translateY(-50%);
		mask: var(--icon-button-chevron) left center no-repeat;
		mask-size: contain;
		background-color: var(--color-btn-arrow-color);
		transition: var(--transition);
	}

	&::after {
		mask-image: var(--icon-button-arrow);
		transform: translateY(-50%) translateX(-8px);
		opacity: 0;
	}
}

/* -------------------------------------------------------------------------
 * Primary Button - Hover / Focus States
 * ------------------------------------------------------------------------- */

@define-mixin a-btn-hover-focus {
	background-color: var(--color-btn-hover-background-color);

	&::before {
		opacity: 0;
		transform: translateY(-50%) translateX(8px);
	}

	&::after {
		opacity: 1;
		transform: translateY(-50%) translateX(0);
	}
}

/* -------------------------------------------------------------------------
 * Outlined Button
 *
 * The outlined button is essentially the primary button, so we can just
 * extend that and override the necessary properties.
 * ------------------------------------------------------------------------- */

@define-mixin a-btn-outlined {

	@mixin a-btn;
	background-color: var(--color-outlined-btn-background-color);
	border-color: var(--color-outlined-btn-border-color);
	color: var(--color-outlined-btn-color);

	&::before,
	&::after {
		background-color: var(--color-outlined-btn-arrow-color);
	}

	&:focus:not(:focus-visible) {

		@mixin a-btn-outlined-hover-focus;
	}

	&:focus-visible {

		@mixin a-btn-outlined-hover-focus;
	}

	@media (--has-hover) {

		&:hover {

			@mixin a-btn-outlined-hover-focus;
		}
	}
}

/* -------------------------------------------------------------------------
 * Outlined Button - Hover / Focus States
 * ------------------------------------------------------------------------- */

@define-mixin a-btn-outlined-hover-focus {
	background-color: var(--color-outlined-btn-hover-background-color);
	color: var(--color-outlined-btn-hover-color);

	&::before,
	&::after {
		background-color: var(--color-outlined-btn-hover-arrow-color);
	}
}

/* -------------------------------------------------------------------------
 * Ghost Button
 *
 * Extends the Primary Button, but with a few overrides.
 * ------------------------------------------------------------------------- */

@define-mixin a-btn-ghost {

	@mixin a-btn;
	display: inline;
	background: linear-gradient(to right, currentcolor, currentcolor) no-repeat 0 100%;
	background-size: 0 1px;
	border: 0;
	border-radius: 0;
	color: var(--color-ghost-btn-color);
	line-height: 1.5;

	/**
	 * Extra right padding to accommodate the absolutely positioned arrow
	 * 8px = space between text and arrow
	 * 14px = width of arrow
	 */
	padding: 0 calc(8px + 14px) 0 0;

	/**
	 * Override the default arrow to remove the spacer on the right, change the
	 * color, and slightly edit the arrow size & position.
	 */
	&::before,
	&::after {
		height: 1.2em;
		top: auto;
		bottom: 0;
		right: 0;
		transform: translateY(0);
		background-color: var(--color-ghost-btn-arrow-color);
	}

	&:focus:not(:focus-visible) {

		@mixin a-btn-ghost-hover-focus;
	}

	&:focus-visible {

		@mixin a-btn-ghost-hover-focus;
	}

	@media (--has-hover) {

		&:hover {

			@mixin a-btn-ghost-hover-focus;
		}
	}
}

/* -------------------------------------------------------------------------
 * Ghost Button - Hover / Focus States
 * ------------------------------------------------------------------------- */

@define-mixin a-btn-ghost-hover-focus {
	background-size: 100% 1px;
	background-color: var(--color-ghost-btn-hover-background-color);
	color: var(--color-ghost-btn-hover-color);

	&::before,
	&::after {
		transform: translateY(0) translateX(8px);
		background-color: var(--color-ghost-btn-hover-arrow-color);
	}

	&::after {
		transform: translateY(0) translateX(0);
	}
}

/* -------------------------------------------------------------------------
 * Text Link
 * ------------------------------------------------------------------------- */

@define-mixin a-link {

	/**
	 * Using a gradient background to create the underline effect
	 * that animates on hover/focus. The gradient is 400% width of the
	 * element, with the first and last 25% being the current text color
	 * and the middle 50% being transparent. On hover/focus, the background
	 * position shifts to the left, revealing the underline.
	 */
	background: linear-gradient(to right, currentcolor 0%, currentcolor 25%, transparent 25%, transparent 75%, currentcolor 75%, currentcolor 100%) no-repeat 100% 100%;
	background-size: 400% 1px;
	cursor: pointer;
	color: var(--color-link-color);
	font-weight: var(--font-weight-bold);
	text-decoration: none;
	transition: var(--transition);

	&:visited {
		color: inherit;
	}

	&:focus:not(:focus-visible) {

		@mixin a-link-hover-focus;
	}

	&:focus-visible {

		@mixin a-link-hover-focus;
		@mixin a-link-focus-visible;
	}

	@media (--has-hover) {

		&:hover {

			@mixin a-link-hover-focus;
		}
	}
}

/* -------------------------------------------------------------------------
 * Text Link - Hover / Focus
 * ------------------------------------------------------------------------- */

@define-mixin a-link-hover-focus {
	background-position: 0 100%;
	color: var(--color-link-hover-color);
}

/* -------------------------------------------------------------------------
 * Text Link - Focus Visible
 *
 * Inline text links that wrap lines look better w/ outline vs box-shadow
 * ------------------------------------------------------------------------- */

@define-mixin a-link-focus-visible {
	box-shadow: none;
	outline: 2px solid currentcolor;
	outline-offset: 2px;
}

/* -------------------------------------------------------------------------
 * Focus Visible
 * Box-shadow is required to display double border in all browsers
 * ------------------------------------------------------------------------- */

@define-mixin focus-visible {
	box-shadow: 0 0 0 3px var(--color-focus-contrast-dark), 0 0 0 5px var(--color-focus-contrast-light);
	outline: 0;
}
