name: 'PHP Tests'

on:
  workflow_call:
    secrets:
      OP_SERVICE_ACCOUNT_TOKEN:
        required: true
        description: 1Password Service Account Token to use for populating composer auth.json
      OP_VAULT:
        description: 1Password vault to use for populating composer auth.json
      OP_ITEM:
        description: 1Password item to use for populating composer auth.json

jobs:
  test:
    strategy:
      matrix:
        suite:
          - wpunit
          - unit
          - functional
          - acceptance

    runs-on: ubuntu-latest
    env:
      build_folder: build
      OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
        with:
          path: ${{ env.build_folder }}

      - name: Detect File Changes
        uses: dorny/paths-filter@v3
        id: changed-files
        with:
          working-directory: ${{ env.build_folder }}
          list-files: shell
          filters: |
            tests:
              - added|modified: 'wp-content/plugins/core/**/*.php'
              - added|modified: 'wp-content/themes/core/**/*.php'
              - added|modified: 'wp-content/mu-plugins/**/*.php'

      - name: Checkout slic
        if: steps.changed-files.outputs.tests == 'true'
        uses: actions/checkout@v4
        with:
          repository: stellarwp/slic
          ref: main
          path: slic
          fetch-depth: 1

      - name: Get Composer Cache Directory
        if: steps.changed-files.outputs.tests == 'true'
        id: composer-cache
        run: |
          echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        if: steps.changed-files.outputs.tests == 'true'
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Set up slic env vars
        if: steps.changed-files.outputs.tests == 'true'
        run: |
          echo "SLIC_BIN=${GITHUB_WORKSPACE}/slic/slic" >> $GITHUB_ENV
          echo "SLIC_WP_DIR=${GITHUB_WORKSPACE}/slic/_wordpress" >> $GITHUB_ENV
          echo "SLIC_WORDPRESS_DOCKERFILE=Dockerfile.base" >> $GITHUB_ENV

      - name: Set run context for slic
        if: steps.changed-files.outputs.tests == 'true'
        run: echo "SLIC=1" >> $GITHUB_ENV && echo "CI=1" >> $GITHUB_ENV

      - name: Start ssh-agent
        if: steps.changed-files.outputs.tests == 'true'
        run: |
          mkdir -p "${HOME}/.ssh";
          ssh-agent -a /tmp/ssh_agent.sock;

      - name: Export SSH_AUTH_SOCK env var
        if: steps.changed-files.outputs.tests == 'true'
        run: echo "SSH_AUTH_SOCK=/tmp/ssh_agent.sock" >> $GITHUB_ENV

      - name: Set up slic for CI
        if: steps.changed-files.outputs.tests == 'true'
        run: |
          pwd
          cd ${GITHUB_WORKSPACE}/${{ env.build_folder }}
          pwd
          ${SLIC_BIN} here
          ${SLIC_BIN} interactive off
          ${SLIC_BIN} build-prompt off
          ${SLIC_BIN} build-subdir off
          ${SLIC_BIN} xdebug off
          ${SLIC_BIN} debug on
          ${SLIC_BIN} php-version set 8.2
          ${SLIC_BIN} info
          ${SLIC_BIN} config

      - name: Install 1Password CLI
        if: steps.changed-files.outputs.tests == 'true'
        uses: 1password/install-cli-action@v1

      - name: Create auth.json via 1Password CLI
        if: steps.changed-files.outputs.tests == 'true'
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
          OP_VAULT: ${{ secrets.OP_VAULT }}
          OP_ITEM: ${{ secrets.OP_ITEM }}
        run: op inject -i auth.template.json -o auth.json

      - name: Set up site for CI
        if: steps.changed-files.outputs.tests == 'true'
        run: |
          ${SLIC_BIN} use site
          ${SLIC_BIN} composer install --optimize-autoloader --no-progress
          ${SLIC_BIN} rm auth.json

      - name: Run suite tests
        if: steps.changed-files.outputs.tests == 'true'
        run: ${SLIC_BIN} run ${{ matrix.suite }} --ext DotReporter
